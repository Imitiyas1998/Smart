///wokwi code
#include <WiFi.h>
#include <FirebaseESP32.h>
#include <addons/TokenHelper.h>

#include "DHT.h"


#define TempSensor 15
#define DHTTYPE DHT22
DHT dht(TempSensor, DHTTYPE);

#define API_KEY "AIzaSyCxrLR5CGhEI6zp4SaUvne9I-B4NhSsrT0"
#define DATABASE_URL "https://imthi-7db8d-default-rtdb.asia-southeast1.firebasedatabase.app/" //<databaseName>.firebaseio.com or <databaseName>.<region>.firebasedatabase.app

#define USER_EMAIL "imthi@gmail.com"
#define USER_PASSWORD "123456789"


FirebaseData fbdo;

FirebaseAuth auth;
FirebaseConfig config;


void setup_wifi(){
  Serial.print("Connecting to WiFi");
  WiFi.begin("Wokwi-GUEST", "");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println();
  Serial.print("Connected: ");
  Serial.println(WiFi.localIP());
}

void setup() {

  pinMode(14, OUTPUT);

  Serial.begin(115200);
  setup_wifi();

  
  config.api_key = API_KEY;

  auth.user.email = USER_EMAIL;
  auth.user.password = USER_PASSWORD;

  config.database_url = DATABASE_URL;

  config.token_status_callback = tokenStatusCallback;

  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}

String read_data = "";

void loop() {

  delay(10);
  FirebaseJson json;


  float tempState = dht.readTemperature();
  float humidity = dht.readHumidity();

  if (Firebase.set(fbdo, "/temperature", tempState)) {
    Serial.println("Temperature sent to Firebase!");
  } else {
    Serial.println("Failed to send temperature to Firebase.");
    Serial.println("Error: " + fbdo.errorReason());
  }

  if (Firebase.getString(fbdo, "/status")){

      if (fbdo.dataType() == "string"){

          read_data = fbdo.stringData();
          Serial.print("Data received: ");
          Serial.println(read_data); 
      }

  }

  if(read_data == "ON"){
    digitalWrite(14, HIGH);
   
  }else{
    digitalWrite(14, LOW);
  }
  
}

////////diagram.json   --- connections
  "connections": [
    [ "esp:TX", "$serialMonitor:RX", "", [] ],
    [ "esp:RX", "$serialMonitor:TX", "", [] ],
    [ "dht1:GND", "esp:GND.2", "black", [ "v0" ] ],
    [ "dht1:VCC", "esp:3V3", "red", [ "v19.2", "h-240", "v48" ] ],
    [ "dht1:SDA", "esp:15", "green", [ "v0" ] ],
    [ "led1:C", "esp:GND.1", "green", [ "v0" ] ],
    [ "led1:A", "esp:14", "green", [ "v0" ] ]
  ],


//////////libaries.txt
# Wokwi Library List
# See https://docs.wokwi.com/guides/libraries

# Automatically added based on includes:
DHT sensor library

Firebase ESP32 Client

////////////library manager
DHT sensor library
Firebase ESP32 Client

////pin configuration
VCC----3v3
SDA----15
GND----GND.2

/////////// steps to firebase connecting
Add project - name
enable google- disable
create project
build - real time databse
create databse
singapore next
start in test mode
rules - 2 true - publish
build authentication - get started
anonumous enable save
add new provider Email,password enable save
user add user give email, password
sign in method , upgrade to enable
next , next , next upgrade to new authen
project settings web Api key
real time databse link paste in Wokwi

///////mobile application
Button button,button1;


 button = (Button) findViewById(R.id.button);
        button1 = (Button) findViewById(R.id.button2);

        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("status");



        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                myRef.setValue(1);

            }
        });

        button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                myRef.setValue(100);
            }
        });

////////RGB with STM32

///////pin connection
R---D2
COM---GND.2
G---D3
B---D4

////code

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.println("Hello, STM32!");
  pinMode(13, OUTPUT);
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);


}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite(13, HIGH);
  delay(200); 
  digitalWrite(13, LOW);
  delay(200);

  digitalWrite(2, HIGH);
  delay(200); 
  digitalWrite(2, LOW);
  delay(200); 

  digitalWrite(3, HIGH);
  delay(200); 
  digitalWrite(3, LOW);
  delay(200); 

  digitalWrite(4, HIGH);
  delay(200); 
  digitalWrite(4, LOW);
  delay(200); 
}

///////Sensors
DHT22---Temparature and humidity
Ultra sonic ------ Distance
IR sensor ------  Detect movement
PIR sensor ----- Motion detection
Servermotor ----- 
OLED ---- display


